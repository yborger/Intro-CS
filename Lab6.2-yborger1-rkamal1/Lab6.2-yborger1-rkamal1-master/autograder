gcc -g -Wall -Wvla -Werror -Wno-error=unused-variable -c parsecmd.c
gcc -g -Wall -Wvla -Werror -Wno-error=unused-variable -o tester tester.c parsecmd.o  -lreadline
--------------------
Enter quit to stop
enter a cmd line> ls

Command line: ls
  0  #ls#
run in the background is false

Command line: ls
  0  #ls#
run in the background is false
enter a cmd line> ls -l

Command line: ls -l
  0  #ls#
  1  #-l#
run in the background is false

Command line: ls -l
  0  #ls#
  1  #-l#
run in the background is false
enter a cmd line> ls -l -a 

Command line: ls -l -a 
  0  #ls#
  1  #-l#
  2  #-a#
run in the background is false

Command line: ls -l -a 
  0  #ls#
  1  #-l#
  2  #-a#
run in the background is false
enter a cmd line> a  b c  def  ghijk  lmnop q  rst uvw xy z abc de f 

Command line: a  b c  def  ghijk  lmnop q  rst uvw xy z abc de f 
  0  #a#
  1  #b#
  2  #c#
  3  #def#
  4  #ghijk#
  5  #lmnop#
  6  #q#
  7  #rst#
  8  #uvw#
  9  #xy#
 10  #z#
 11  #abc#
 12  #de#
 13  #f#
run in the background is false

Command line: a  b c  def  ghijk  lmnop q  rst uvw xy z abc de f 
  0  #a#
  1  #b#
  2  #c#
  3  #def#
  4  #ghijk#
  5  #lmnop#
  6  #q#
  7  #rst#
  8  #uvw#
  9  #xy#
 10  #z#
 11  #abc#
 12  #de#
 13  #f#
run in the background is false
enter a cmd line> sleeper &

Command line: sleeper &
  0  #sleeper#
run in the background is true

Command line: sleeper &
  0  #sleeper#
run in the background is true
enter a cmd line> sleeper  hello there &

Command line: sleeper  hello there &
  0  #sleeper#
  1  #hello#
  2  #there#
run in the background is true

Command line: sleeper  hello there &
  0  #sleeper#
  1  #hello#
  2  #there#
run in the background is true
enter a cmd line>            ls                   -l                     -a

Command line:            ls                   -l                     -a
  0  #ls#
  1  #-l#
  2  #-a#
run in the background is false

Command line:            ls                   -l                     -a
  0  #ls#
  1  #-l#
  2  #-a#
run in the background is false
enter a cmd line>            a            b             c     def   ghijk  lmnop q    &         

Command line:            a            b             c     def   ghijk  lmnop q    &         
  0  #a#
  1  #b#
  2  #c#
  3  #def#
  4  #ghijk#
  5  #lmnop#
  6  #q#
run in the background is true

Command line:            a            b             c     def   ghijk  lmnop q    &         
  0  #a#
  1  #b#
  2  #c#
  3  #def#
  4  #ghijk#
  5  #lmnop#
  6  #q#
run in the background is true
enter a cmd line>        hello   there    what   is   &  happening with this crazy command

Command line:        hello   there    what   is   &  happening with this crazy command
  0  #hello#
  1  #there#
  2  #what#
  3  #is#
run in the background is true

Command line:        hello   there    what   is   &  happening with this crazy command
  0  #hello#
  1  #there#
  2  #what#
  3  #is#
run in the background is true
enter a cmd line> sleeper&

Command line: sleeper&
  0  #sleeper&#
run in the background is false

Command line: sleeper&
  0  #sleeper&#
run in the background is false
enter a cmd line> 
Empty command line
enter a cmd line> 
Empty command line
enter a cmd line> ls -la

Command line: ls -la
  0  #ls#
  1  #-la#
run in the background is false

Command line: ls -la
  0  #ls#
  1  #-la#
run in the background is false
enter a cmd line> quit
--------------------
-------- valgrind -------
==1810501== Memcheck, a memory error detector
==1810501== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1810501== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1810501== Command: ./tester
==1810501== 
Enter quit to stop
enter a cmd line> ls

Command line: ls
  0  #ls#
run in the background is false

Command line: ls
  0  #ls#
run in the background is false
enter a cmd line> ls -l

Command line: ls -l
  0  #ls#
  1  #-l#
run in the background is false

Command line: ls -l
  0  #ls#
  1  #-l#
run in the background is false
enter a cmd line> ls -l -a 

Command line: ls -l -a 
  0  #ls#
  1  #-l#
  2  #-a#
run in the background is false

Command line: ls -l -a 
  0  #ls#
  1  #-l#
  2  #-a#
run in the background is false
enter a cmd line> sleeper  hello there &

Command line: sleeper  hello there &
  0  #sleeper#
  1  #hello#
  2  #there#
run in the background is true

Command line: sleeper  hello there &
  0  #sleeper#
  1  #hello#
  2  #there#
run in the background is true
enter a cmd line> quit
==1810501== 
==1810501== HEAP SUMMARY:
==1810501==     in use at exit: 200,443 bytes in 212 blocks
==1810501==   total heap usage: 459 allocs, 247 frees, 224,251 bytes allocated
==1810501== 
==1810501== LEAK SUMMARY:
==1810501==    definitely lost: 0 bytes in 0 blocks
==1810501==    indirectly lost: 0 bytes in 0 blocks
==1810501==      possibly lost: 0 bytes in 0 blocks
==1810501==    still reachable: 200,443 bytes in 212 blocks
==1810501==         suppressed: 0 bytes in 0 blocks
==1810501== Rerun with --leak-check=full to see details of leaked memory
==1810501== 
==1810501== For lists of detected and suppressed errors, rerun with: -s
==1810501== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
--------------------
